<?xml version="1.0"  encoding="UTF-8" ?>
<project name="Redmine" basedir="." default="dist">

	<!-- dist -->

	<property name="app.name" value="Redmine-echarts" />
	<property name="app.version" value="201504-snapshots" />
	<property name="root.dir" location="E:/project/huanan-redmine" />
	<property name="app.dir" location="${root.dir}/WebRoot" />

	<property name="generated.dir" location="${root.dir}/generated" />
	<property name="build.classpath" location="C:\DevlopEnv\Java\jdk1.5.0_22" />
	<property name="src.dir" location="${root.dir}/src/com/zhongying/huanan/product" />
	<property name="class.dir" location="${app.dir}/WEB-INF/classes" />
	<property name="lib.dir" location="${app.dir}/WEB-INF/lib" />
	<property name="dist.dir" location="${root.dir}/dist" />
	<property name="doc.dir" location="${root.dir}/api" />
	<property name="build.dir" location="${root.dir}/build" />

	<property name="platform.lib.dir" location="E:\project\huanan-redmine\dist" />

	<!-- 设置应用环境变量-->
	<path id="build.classpath">
		<pathelement path="${class.dir}" />
		<fileset dir="${lib.dir}">
			<include name="**/*.jar" />
		</fileset>
		<fileset dir="${platform.lib.dir}">
			<include name="**/gd-platform-155-20130321.jar" />
		</fileset>
	</path>

	<target name="log" description="echo">
		<echo message="${app.name} ${app.version}" />
		<echo message="${root.dir}" />
		<echo message="${build.classpath}" />
		<echo message="${src.dir}" />
		<echo message="${class.dir}" />
	</target>

	<!--更新到平台项目 （仅HTML）-->
	<target name="update-platform-HTML" depends="log">
		<copy todir="${webroot.dir}/huanan">
			<fileset dir="${app.dir}/huanan">

			</fileset>
		</copy>
	</target>

	<!-- 初始化应用程序，删除相关目录-->
	<target name="clean" description="Delete build files">

		<delete dir="${class.dir}" />
		<!--<delete dir="${dist.dir}" />-->
	</target>


	<!-- 初始化创建相关应用目录   -->
	<target name="prepare" depends="clean" description="create build,dist files">
		<mkdir dir="${class.dir}" />
		<mkdir dir="${dist.dir}" />
	</target>

	<!-- compile 命令，执行javac编译命令 -->
	<target name="compile" depends="prepare">
		<javac srcdir="${src.dir}" destdir="${class.dir}" debug="on" source="1.5" target="1.5" fork="yes"
			executable="C:\DevlopEnv\Java\jdk1.5.0_22\bin\javac">

			<!--给编译器指定编码，防止出现："警告： 编码 GBK 的不可映射字符"-->
			<!--<compilerarg line="-encoding UTF-8 " />-->
			<compilerarg line="-encoding GBK  -Xlint:deprecation" />

			<classpath refid="build.classpath" />
		</javac>
	</target>

	<target name="dist" depends="log">
		<jar destfile="${dist.dir}/${app.name}-${app.version}.jar">
			<fileset dir="${class.dir}">
			</fileset>
		</jar>
	</target>

	<!-- 直接将classes目录下文件打成jar包 -->
	<target name="distJarAsClass">
		<jar destfile="${dist.dir}/dist.jar">
			<fileset dir="${class.dir}">
			</fileset>
		</jar>
	</target>


	<!-- 生成说明文档(api)  -->
	<!---->
	<target name="javadoc" depends="dist">
		<delete dir="${doc.dir}" />
		<mkdir dir="${doc.dir}" />
		<javadoc packagenames="${packages}" sourcepath="${src.dir}" destdir="${doc.dir}" author="true" version="true" use="true" splitindex="true" windowtitle="${app.name} API" doctitle="${app.name}">
			<classpath refid="build.classpath" />
		</javadoc>
	</target>


	
</project>
